---
 - name: 1.Debian
   debug:
     var: ansible_os_family

 - name: 2.Upgrade and upgrade Debian packages
   apt: 
     update_cache: yes

 - name: 3.Installing default soft
   apt:
     name: "{{item}}"
     state: present
   with_items:
     - "{{ default_soft_pkg_debian }}"


 - name: 4.Install config file for example2.com and restart httpd
   template:
    src: debian_nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ http_conf }}"
    owner: root
    group: root
    mode: 0644
   notify: restart nginx 

 - name: 5.Enables new site
   file:
    src: "/etc/nginx/sites-available/{{ http_conf }}"
    dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
    state: link
   notify: reload nginx

 - name: 6. Removes "default" site
   file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
   notify: restart nginx

 - name: 7. Sets Up PHP Info Page
   template:
    src: "php_info.j2"
    dest: "/var/www/html/info.php"

 - name: 8. Ensure the PostgreSQL service is running
   service: name=postgresql state=started enabled=yes
 
 - name: 9. "Create app database"
   become: true
   become_user: postgres
   postgresql_db: name={{ db_name }}
        template='template0'
        state=present
 
 - name: 10. Ensure user has access to the new database
   become: true
   become_user: postgres
   postgresql_user: db={{ db_name }}
        name={{ db_user }}
        password={{ db_password }}
        priv=ALL
        state=present

 - name: 11. Ensure user does not have unnecessary permissions
   become: true
   become_user: postgres
   postgresql_user: name={{ db_user }}
        role_attr_flags=NOSUPERUSER,NOCREATEDB
        state=present

